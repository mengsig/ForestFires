# Enhanced Fire Simulation Configuration
# This file contains all configurable parameters for the fire simulation project

# =============================================================================
# SIMULATION PARAMETERS
# =============================================================================

# Grid dimensions (default: 250x250)
export GRID_WIDTH=250
export GRID_HEIGHT=250

# Simulation name (used for organizing results)
export SIMULATION_NAME="enhanced_fire_sim_$(date +%Y%m%d_%H%M%S)"

# Number of parallel simulations to average (default: 100)
export NUM_PARALLEL_SIMULATIONS=100

# Time step calculation multiplier (affects simulation duration)
export TIME_STEP_MULTIPLIER=2500
export TIME_STEP_DIVISOR=400

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Maximum parallel jobs (0 = auto-detect based on CPU cores)
export MAX_PARALLEL_JOBS=0

# Memory optimization settings
export NUMPY_NUM_THREADS=1  # Prevent numpy from using all cores
export OMP_NUM_THREADS=1    # Prevent OpenMP from using all cores

# =============================================================================
# CENTRALITY MEASURES
# =============================================================================

# Available centrality measures (space-separated)
export CENTRALITIES="domirank random degree bonacich"

# Fuel break percentages to test (space-separated)
export FUEL_BREAK_PERCENTAGES="0 5 10 15 20 25 30"

# =============================================================================
# FILE PATHS AND DIRECTORIES
# =============================================================================

# Raster data directory
export RASTER_DATA_DIR="cropped_rasters"

# Results output directory
export RESULTS_DIR="src/results"

# Temporary files directory
export TEMP_DIR="/tmp/fire_simulation"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR)
export LOG_LEVEL="INFO"

# Enable/disable colored output (true/false)
export COLORED_OUTPUT="true"

# Log file location (empty = stdout only)
export LOG_FILE=""

# =============================================================================
# VISUALIZATION SETTINGS
# =============================================================================

# Default colormap for heatmaps
export DEFAULT_COLORMAP="viridis"

# Image output format (png, pdf, svg)
export IMAGE_FORMAT="png"

# Image DPI (dots per inch)
export IMAGE_DPI=300

# Enable/disable animation generation (true/false)
export GENERATE_ANIMATIONS="false"

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================

# Random seed for reproducible results (0 = random seed)
export RANDOM_SEED=0

# Enable profiling (true/false)
export ENABLE_PROFILING="false"

# Memory limit per process (MB, 0 = no limit)
export MEMORY_LIMIT_MB=0

# Checkpoint interval (0 = no checkpointing)
export CHECKPOINT_INTERVAL=0

# =============================================================================
# ENVIRONMENT VALIDATION
# =============================================================================

# Required Python version (minimum)
export REQUIRED_PYTHON_VERSION="3.8"

# Required disk space (MB)
export REQUIRED_DISK_SPACE_MB=1000

# =============================================================================
# DERIVED SETTINGS (DO NOT MODIFY)
# =============================================================================

# Calculate optimal number of processes if not specified
if [[ "${MAX_PARALLEL_JOBS}" -eq 0 ]]; then
    export MAX_PARALLEL_JOBS=$(($(nproc) - 1))
    if [[ "${MAX_PARALLEL_JOBS}" -lt 1 ]]; then
        export MAX_PARALLEL_JOBS=1
    fi
fi

# Create temporary directory if it doesn't exist
mkdir -p "${TEMP_DIR}"

# Set random seed if specified
if [[ "${RANDOM_SEED}" -gt 0 ]]; then
    export PYTHONHASHSEED="${RANDOM_SEED}"
fi